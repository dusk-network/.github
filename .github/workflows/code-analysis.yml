on:
  workflow_call:
    inputs:
      toolchain:
        description: 'Rust toolchain version'
        type: string
        default: nightly
      clippy_default:
        description: 'Use default arguments'
        type: boolean
        required: false
        default: true
      clippy_args:
        description: 'Custom arguments for Clippy'
        type: string
        required: false

name: Code Analysis

jobs:
  rustfmt:
    name: Rust Format
    runs-on: core
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          components: rustfmt
          toolchain: ${{ inputs.toolchain }}
      - run: rustup override set ${{ inputs.toolchain }}
      - uses: Swatinem/rust-cache@v2
      - run: |
          if [ "${{ inputs.toolchain }}" == "nightly" ]; then
            cargo +nightly fmt --all -- --check
          else
            cargo fmt --all -- --check
          fi

  clippy:
    name: Clippy Check
    runs-on: core
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - run: |
          if [ ${{ inputs.clippy_default }} == true ]; then
            cargo clippy --all-features --release -- -D warnings
          elif [ -z "${{ inputs.clippy_default }}" ]; then
            cargo clippy
          else
            cargo clippy ${{ inputs.clippy_args }}
          fi
